# -*- coding: utf-8 -*-
"""
Created on Sat Jun  4 11:50:21 2022

@author: Luke
Barebones script for multi-step mode run of Chemyx Syringe Pump in Python
Tested on Chemyx 100-X.
"""
#%% Imports and Setup
import sys
import os
import inspect

# Change CWD - Not necessary if set manually in IDE
def get_script_dir(follow_symlinks = True):
    # retreive directory of this file for use in setting CWD
    if getattr(sys, 'frozen', False):
        path = os.path.abspath(sys.executable)
    else:
        path = inspect.getabsfile(get_script_dir)
    if follow_symlinks:
        path = os.path.realpath(path)
    return os.path.dirname(path)

script_dir = get_script_dir() # retreive containing directory of file
os.chdir(script_dir)          # set CWD to containing directory

# Import CHEMYX serial connection modules
from core import connect

# get open port info
portinfo = connect.getOpenPorts() 

# initiate Connection object
conn = connect.Connection(port=str(portinfo[0]),baudrate=9600, x=0, mode=0)

#%% Connect and Run Pump - Multi-Step Loop Setup
if __name__=='__main__':
    
    # open Connection to pump
    conn.openConnection()
    
    # Apply parameters in a way to perform multi-step run
    # set parameters
    conn.setUnits('mL/min') # OPTIONS: 'mL/min','mL/hr','μL/min','μL/hr'
    diameter=28.6           # 28.6mm diameter
    volume=[0.25,5,2]       # Volume = [Step1: 0.25mL, Step2: 5mL, Step3: 2mL]
    delay=[0.1,0.2,0.3]     # Delay  = [Step1: 6s,     Step2: 12s, Step3: 18s]
    # Variable flow rates in each step, linear ramping generated by pump
    rate1=[50,5,40]         # between rate1 and rate2 for each step
    rate2=[51,6,41]         # use one rate list for linear flow per step
    varrates=[str(rate1[ii])+'/'+str(rate2[ii]) for ii in range(len(rate1))]
    # Rate = [Step1: 50mL/min->51mL/min, Step2: 5mL/min->6mL/min, Step3: 40mL/min->41mL/min]
            
    # communicate parameters to pump
    conn.setDiameter(diameter)  
    conn.setVolume(volume)      
    conn.setRate(varrates)          
    conn.setDelay(delay)  
    
    # start pump
    conn.startPump()